{"version":3,"sources":["../app.js"],"names":["express","require","config","mongoDB","path","favicon","logger","cookieParser","bodyParser","expressValidator","expressSession","hbs","notFoundMiddleware","index","applications","notification","app","engine","extname","defaulLayout","layoutsDir","__dirname","set","join","server","Server","io","use","json","urlencoded","extended","static","secret","resave","saveUninitialized","req","res","next","on","socket","console","log","id","room","err","locals","message","error","get","status","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["var express = require('express');\nrequire('dotenv').config();\nvar mongoDB=require('./config/mongodb');\n\n\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar expressValidator = require('express-validator');\nvar expressSession=require('express-session');\nvar hbs = require('express-handlebars');\nvar notFoundMiddleware=require('./middlewares/notFoundMiddleware');\n\n\nvar index = require('./routes/index');\n//var users = require('./routes/users');\nvar applications = require('./routes/application');\nvar notification = require('./routes/notification');\n//var catalog = require('./routes/catalog');  //Import routes for \"catalog\" area of site\n\n\nvar app = express();\n\n\n// view engine setup\napp.engine('hbs',hbs({extname:'hbs',defaulLayout:'layout',layoutsDir:__dirname+'/views/layouts/'}));\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\nvar server = require('http').Server(app);\nvar io = require('socket.io')(server);\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(expressValidator());\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(expressSession({\n    secret: 'asdfhakshfkash',\n    resave: false,\n    saveUninitialized: false\n}));\n\napp.use(function(req, res, next){\n    res.io = io;\n    io.on('connection', function(socket){\n        console.log('connected with socket ID:', socket.id);\n        socket.on('join', function(room) {\n            socket.join(room);\n            console.log('Joining room:',room);\n\n        });\n\n    });\n    next();\n});\n// Routing\napp.use('/', index);\n//app.use('/users', users);\napp.use('/app', applications);\napp.use('/notification', notification);\n//app.use('/catalog', catalog);  // Add catalog routes to middleware chain.\n\n\n\n// catch 404 and forward to error handler\napp.use(notFoundMiddleware);\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = {app: app, server: server};\n"]}